#include<iostream>
using namespace std;
void plusone(int arr[],int n)
{
    int i=n;
    if(arr[i]<9)
    {
        arr[i]=arr[i]+1;
        return;
    }
    arr[i]=0;
    i--;
    plusone(arr,i);
}
int main()
{
    int n,a[100];
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    plusone(a,n);
    if(a[0]>0){
        cout<<a[0]<<",";
    }
    for(int j=0;j<n;j++)
    {
        cout<<a[j];
        if(j<n-1)
        {
            cout<<",";
        }
    }
    return 0;
}


solution from website:
using c
int* plusOne(int* A, int n1, int *len1) {
    int i,dig,carry=1,len=0;
    int *out = (int *)malloc(sizeof(int)*(n1+1));
    int oind = n1;
    for(i=n1-1;i>=0;i--){
        out[oind--] = (A[i]+carry)%10;
        carry = (A[i]+carry)/10;
    }
    out[oind] = carry;
    for(i=0;i<n1+1&&out[i]==0;i++)
        len++;
    out = out+len;
    *len1=n1+1-len;
    return out;
}

using c++
vector<int> Solution::plusOne(vector<int> &A) {
   int n = A.size();
   int count = 0; 
   for(int i=n-1;i>=0;i--){
       if(A[i]==9) count++;
       else break;
   }
   if(count == n){
       cout<<"1 ";
       for(int i=1;i<=n;i++) cout<<"0 ";
   }
   else{
       int l = n-count-1;
       int flag = 0;
       for(int i=0;i<l;i++) if(A[i]!=0 || (flag!=0 && A[i]==0)) {flag = 1;cout<<A[i]<<" ";} else if(A[i]==0 && flag == 0);
       cout<<A[l] + 1<<" ";
       for(int i=1;i<=count;i++) cout<<"0 ";
   }
   vector<int> V;
   return V;
}






